# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Prep assets
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Build uap-redshift.zip
      run: |
        git clone https://github.com/ua-parser/uap-python
        mkdir assets-uap-redshift
        touch assets-uap-redshift/__init__.py
        cd uap-python
        git checkout ${{ github.ref }}
        python setup.py install
        cp -R build/lib/ua_parser/ ../assets-uap-redshift/ua_parser/
        cd ../assets-uap-redshift
        zip ../uap-redshift.zip * */* && cd ..
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./uap-redshift.zip
        asset_name: uap-redshift.zip
        asset_content_type: application/zip